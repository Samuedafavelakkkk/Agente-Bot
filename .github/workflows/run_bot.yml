name: Run Bot and Flask Continuously

on:
  schedule:
    - cron: '*/5 * * * *'  # Executa a cada 5 minutos
  workflow_dispatch:  # Também pode ser disparado manualmente

jobs:
  run_bot:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config valgrind emacs-nox libltdl-dev libtiff-tools exiftool git git-lfs cmake liblcms2-dev libtiff-dev libpng-dev libheif1 libheif-dev libz-dev unzip libzstd-dev libwebp-dev build-essential hwinfo
          sudo python get-pip.py
          sudo apt-get install python3-jpylyzer
          
          # Baixando e instalando o OpenJPEG
          wget https://github.com/uclouvain/openjpeg/archive/master.zip
          unzip master.zip
          cd openjpeg-master/
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make
          sudo make install
          sudo make clean
          cd ~
          rm -rf openjpeg-master master.zip

          # Baixando e instalando o ImageMagick
          wget https://github.com/ImageMagick/ImageMagick/archive/refs/heads/main.zip
          unzip main.zip
          cd ImageMagick-main
          sudo apt-get install libgrokj2k1 grokj2k-tools libgrokj2k1-dev libgrokj2k1-doc
          mkdir ~/images
          cd ~/images
          wget -O in.tif https://storage.googleapis.com/linked_content/icc/ICC_profile_test_image_Farbkreis_120grad.tif
          sudo ldconfig
          convert in.tif out_via_imagemagick.jp2 | exiftool out_via_imagemagick.jp2 | less
          opj_compress -i in.tif -o out_lossy_42db.jp2 -p RLCP -t 1024,1024 -EPH -SOP -I -q 42
          grk_compress -i in.tif -o grk_out_lossy_42db.jp2 -p RLCP -t 1024,1024 -EPH -SOP -I -q 42
          jpylyzer *.jp2 | grep '<isValid format="jp2">True</isValid>'
          
          # Instalar dependências de imagem
          sudo apt-get install libfreetype6-dev liblcms2-dev libopenjpeg-dev libwebp-dev
          sudo apt-get update && sudo apt-get install -y libsndfile1 libjpeg-dev zlib1g-dev

      - name: Install dependencies
        run: |
          python -m venv venv  # Cria o ambiente virtual
          source venv/bin/activate  # Ativa o ambiente virtual
          python -m pip install --upgrade pip
          pip install pillow[openjpeg]
          pip install -r requirements.txt  # Instala as dependências

      - name: Run Flask and Bot
        run: |
          source venv/bin/activate  # Ativa novamente o ambiente virtual
          nohup python app.py &  # Executa o bot e o Flask em segundo plano
        continue-on-error: true  # Continua tentando mesmo se houver falha
